services:
  auth:
    build: ./auth-service/backend
    image: myorg/auth:latest
    ports:
      - "8082:8082"
    volumes:
      - ./auth/backend/config/config.yml:/app/config.yml:ro
    environment:
      - CONFIG_PATH=/app/config.yml
    depends_on:
      - postgres
    networks:
      backend:
        aliases:
          - auth


  user:
    build: ./user/backend
    image: myorg/user:latest
    ports:
      - "8081:8081"
    networks:
      backend:
        aliases:
          - user
    environment:
      - AUTH_URL=http://auth:8082
      - CONFIG_PATH=/app/config.yml
    depends_on:
      - auth
    volumes:
      - ./user/backend/config/config.yml:/app/config.yml:ro

  gateway:
    build: ./gateway
    image: myorg/gateway:latest
    restart: always
    ports:
      - "8080:8080"
    networks: [ backend ]
    environment:
      - AUTH_URL=http://auth:8082
    depends_on:
      - auth
      - user

  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    networks: [ backend ]
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro

volumes:
  pgdata:


networks:
  backend:
    driver: bridge



